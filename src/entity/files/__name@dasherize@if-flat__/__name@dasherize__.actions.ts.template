<% if (ready) {%>import { createAction, props } from '@ngrx/store';
import { I<%= classify(name) %>Params } from '@<%= dasherize(layer) %>/<%= dasherize(moduleName) %>/interfaces/<%= dasherize(name) %>/params.interface';
import { I<%= classify(name) %>, I<%= classify(name) %>s, I<%= classify(name) %>Dto } from '@<%= dasherize(layer) %>/<%= dasherize(moduleName) %>/models/<%= dasherize(name) %>.model';

<% }%>/*
 * Action Types
 */
export enum ActionTypes {<% if (ready) {%>
	Load<%= classify(name) %>s = '[<%= classify(name) %>] Load <%= classify(name) %>s',
	Load<%= classify(name) %>sSuccess = '[<%= classify(name) %>] Load <%= classify(name) %>s Success',
	Load<%= classify(name) %>sFail = '[<%= classify(name) %>] Load <%= classify(name) %>s Fail',

	Load<%= classify(name) %> = '[<%= classify(name) %>] Load Single <%= classify(name) %>',
	Load<%= classify(name) %>Success = '[<%= classify(name) %>] Load Single <%= classify(name) %> Success',
	Load<%= classify(name) %>Fail = '[<%= classify(name) %>] Load Single <%= classify(name) %> Fail',

	Create<%= classify(name) %> = '[<%= classify(name) %>] Create <%= classify(name) %>',
	Create<%= classify(name) %>Success = '[<%= classify(name) %>] Create <%= classify(name) %> Success',
	Create<%= classify(name) %>Fail = '[<%= classify(name) %>] Create <%= classify(name) %> Fail',

	Update<%= classify(name) %> = '[<%= classify(name) %>] Update <%= classify(name) %>',
	Update<%= classify(name) %>Success = '[<%= classify(name) %>] Update <%= classify(name) %> Success',
	Update<%= classify(name) %>Fail = '[<%= classify(name) %>] Update <%= classify(name) %> Fail',

	Delete<%= classify(name) %> = '[<%= classify(name) %>] Delete <%= classify(name) %>',
	Delete<%= classify(name) %>Success = '[<%= classify(name) %>] Delete <%= classify(name) %> Success',
	Delete<%= classify(name) %>Fail = '[<%= classify(name) %>] Delete <%= classify(name) %> Fail',
<% }%>}<% if (ready) {%>

// LOAD
export const load<%= classify(name) %>s = createAction(ActionTypes.Load<%= classify(name) %>s, props<{ params?: I<%= classify(name) %>Params }>());

export const load<%= classify(name) %>sSuccess = createAction(ActionTypes.Load<%= classify(name) %>sSuccess, props<I<%= classify(name) %>s>());

export const load<%= classify(name) %>sFail = createAction(ActionTypes.Load<%= classify(name) %>sFail, props<{ error: any }>());

// LOAD ONE
export const load<%= classify(name) %> = createAction(ActionTypes.Load<%= classify(name) %>, props<{ id: string; params?: I<%= classify(name) %>Params }>());

export const load<%= classify(name) %>Success = createAction(ActionTypes.Load<%= classify(name) %>Success, props<I<%= classify(name) %>>());

export const load<%= classify(name) %>Fail = createAction(ActionTypes.Load<%= classify(name) %>Fail, props<{ error: any }>());

// CREATE
export const create<%= classify(name) %> = createAction(ActionTypes.Create<%= classify(name) %>, props<{ <%= camelize(name) %>: I<%= classify(name) %>Dto; params?: I<%= classify(name) %>Params }>());

export const create<%= classify(name) %>Success = createAction(ActionTypes.Create<%= classify(name) %>Success, props<I<%= classify(name) %>>());

export const create<%= classify(name) %>Fail = createAction(ActionTypes.Create<%= classify(name) %>Fail, props<{ error: any }>());

// UPDATE
export const update<%= classify(name) %> = createAction(ActionTypes.Update<%= classify(name) %>, props<{ <%= camelize(name) %>: I<%= classify(name) %>Dto; params?: I<%= classify(name) %>Params }>());

export const update<%= classify(name) %>Success = createAction(ActionTypes.Update<%= classify(name) %>Success, props<I<%= classify(name) %>>());

export const update<%= classify(name) %>Fail = createAction(ActionTypes.Update<%= classify(name) %>Fail, props<{ error: any }>());

// DELETE
export const delete<%= classify(name) %> = createAction(ActionTypes.Delete<%= classify(name) %>, props<{ <%= camelize(name) %>: I<%= classify(name) %>; params?: I<%= classify(name) %>Params }>());

export const delete<%= classify(name) %>Success = createAction(ActionTypes.Delete<%= classify(name) %>Success, props<{ id: string }>());

export const delete<%= classify(name) %>Fail = createAction(ActionTypes.Delete<%= classify(name) %>Fail, props<{ error: any }>());<% }%>
