{
	"$schema": "http://json-schema.org/draft-07/schema",
	"$id": "SchematicsRilkePage",
	"title": "Rilke Page Options Schema",
	"type": "object",
	"description": "Creates a new, generic page definition in the given or default project.",
	"additionalProperties": false,
	"properties": {
		"path": {
			"type": "string",
			"format": "path",
			"description": "The path at which to create the page file, relative to the current workspace. Default is a folder with the same name as the component in the project root.",
			"visible": false
		},
		"project": {
			"type": "string",
			"description": "The name of the project.",
			"$default": {
				"$source": "projectName"
			}
		},
		"name": {
			"type": "string",
			"description": "The name of the page.",
			"$default": {
				"$source": "argv",
				"index": 0
			},
			"x-prompt": "What name would you like to use for the page?"
		},
		"inlineStyle": {
			"description": "Include styles inline in the page.ts file. Only CSS styles can be included inline. By default, an external styles file is created and referenced in the component.ts file.",
			"type": "boolean",
			"default": false,
			"alias": "s",
			"x-user-analytics": 9
		},
		"inlineTemplate": {
			"description": "Include template inline in the page.ts file. By default, an external template file is created and referenced in the component.ts file.",
			"type": "boolean",
			"default": false,
			"alias": "t",
			"x-user-analytics": 10
		},
		"viewEncapsulation": {
			"description": "The view encapsulation strategy to use in the new page.",
			"enum": ["Emulated", "None", "ShadowDom"],
			"type": "string",
			"alias": "v",
			"x-user-analytics": 11
		},
		"changeDetection": {
			"description": "The change detection strategy to use in the new page.",
			"enum": ["Default", "OnPush"],
			"type": "string",
			"default": "Default",
			"alias": "c"
		},
		"prefix": {
			"type": "string",
			"description": "The prefix to apply to the generated page selector.",
			"alias": "p",
			"oneOf": [
				{
					"maxLength": 0
				},
				{
					"minLength": 1,
					"format": "html-selector"
				}
			]
		},
		"style": {
			"description": "The file extension or preprocessor to use for style files, or 'none' to skip generating the style file.",
			"type": "string",
			"default": "scss",
			"enum": ["css", "scss", "sass", "less", "none"],
			"x-user-analytics": 5
		},
		"type": {
			"type": "string",
			"description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
			"default": "Page"
		},
		"skipTests": {
			"type": "boolean",
			"description": "Do not create \"spec.ts\" test files for the new page.",
			"default": false,
			"x-user-analytics": 12
		},
		"flat": {
			"type": "boolean",
			"description": "Create the new files at the top level of the current project.",
			"default": false
		},
		"skipImport": {
			"type": "boolean",
			"description": "Do not import this page into the owning NgModule.",
			"default": false,
			"x-user-analytics": 18
		},
		"selector": {
			"type": "string",
			"format": "html-selector",
			"description": "The HTML selector to use for this page."
		},
		"skipSelector": {
			"type": "boolean",
			"default": false,
			"description": "Specifies if the page should have a selector or not."
		},
		"layer": {
			"description": "Determine which layer it belongs to.",
			"type": "string",
			"alias": "l",
			"default": "features",
			"x-user-analytics": 5
		},
		"module": {
			"type": "string",
			"description": "The declaring NgModule.",
			"alias": "m",
			"$default": {
				"$source": "argv",
				"index": 0
			},
			"x-prompt": "Which feature would you like to use this page?"
		},
		"moduleName": {
			"type": "string",
			"description": "The declaring NgModule name."
		},
		"subscriptionManagement": {
			"type": "boolean",
			"description": "Determine if you use subscriptions",
			"alias": "s",
			"$default": {
				"$source": "argv",
				"index": 0
			},
			"x-prompt": "Will you use subscription?"
		},
		"export": {
			"type": "boolean",
			"default": false,
			"description": "The declaring NgModule exports this page.",
			"x-user-analytics": 19
		},
		"route": {
			"type": "string",
			"description": "The route path for a routes."
		}
	},
	"required": ["name","module"]
}
