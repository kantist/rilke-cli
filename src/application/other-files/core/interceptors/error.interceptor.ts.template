import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';
import { AuthService } from '@core/services/auth/auth.service';

@Injectable()
export class ErrorInterceptor implements HttpInterceptor {
	constructor(
		private authenticationService: AuthService,
		private router: Router,
	) { }

	intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
		return next.handle(request).pipe(catchError(err => {
			console.log(err);
			if (err.status == 401) {
				err.error.errors.forEach((err) => {
					if (err.code == 1)
						this.authenticationService.logout();
				});
			}

			if (err.status == 403) {
				this.router.navigate(['/error/page-403']);
			}

			if (err.error.errors) {
				err.error.errors.forEach((err) => {
					//err.message = this.exceptionService.getMessage(err.code);
				});
			}

			const error = err;
			return throwError(() => error);
		}))
	}
}
