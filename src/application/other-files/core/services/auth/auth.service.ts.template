import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { BehaviorSubject, Observable } from 'rxjs';
import { tap } from 'rxjs/operators';

import { ApiService } from '@core/services/api/api.service';
import { ApiCall, IApiCall } from '@core/models/api-call';

@Injectable({
	providedIn: 'root'
})
export class AuthService {
	private authToken: BehaviorSubject<string>;
	public token: Observable<string>;

	constructor(
		private apiService: ApiService,
		private router: Router,
	) {
		this.authToken = new BehaviorSubject<string>(localStorage.getItem('bearer_token'));
		this.token = this.authToken.asObservable();
	}

	public get bearerToken(): string {
		return this.authToken.value;
	}

	login(email: string, password: string) {
		let apiCall: IApiCall = new ApiCall({
			path: 'auth/authorize',
			body: {
				data: {
					grant_type: "basic",
					email: email,
					password: password
				}
			}
		});

		return this.apiService.post(apiCall).pipe(
			tap((response: any) => {
				localStorage.setItem('bearer_token', response.data.token);
				this.authToken.next(response.data.token);
				return response.data.token;
			})
		);
	}

	logout() {
		// remove user from local storage to log user out
		localStorage.removeItem('bearer_token');
		this.authToken.next(null);
		this.router.navigate(['/login']);
	}

	clear() {
		localStorage.removeItem('bearer_token');
		this.authToken.next(null);
	}
}